#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
#include <unistd.h>
#include <share.h>
#include <pwd.h>
#include <grp.h>
#include <shadow.h>
#include <time.h>
#include <dirent.h>
#include <sys/wait.h>

int main(int argc, char *argv[])
{
	int i;
	//1 创建一个孤儿进程
	if (fork() != 0)
	{
		printf("parent : pid = %d ppid = %d pgid = %d pgid = %d sid = %d\n",
			getpid(), getppid(),  getpgrp(), getpgid(getpid()), getsid(getpid()));
		exit(0);
	}

	//orphan
	sleep(1);
	//2 创建一个新的会话 把自己id设定为进程组id，同时自己id设定为会话id
	setsid();
	printf("child : pid = %d ppid = %d pgid = %d pgid = %d sid = %d\n",
			getpid(), getppid(),  getpgrp(), getpgid(getpid()), getsid(getpid()));

	//workdir :
	//3 切换当前工作目录
	chdir("/");
	printf("pwd : %s\n", get_current_dir_name());
	/*getchar();*/

	//mode 022
	//4 修改默认权限
	umask(0);

	//5 关闭文件描述符
	for (i = 0; i < 1024; i++)
	{
		close(i);
	}

	while(1)
		sleep(1);


	return 0;
}
